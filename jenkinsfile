pipeline {
    agent any
    environment{
         PATH = "/opt/apache-maven-3.6.3/bin:$PATH"
         DOCKER_TAG = getDockerTag()
    }

    stages {
        stage('SonarQube Analysis') {
          steps {
             withSonarQubeEnv('khatabook-sonar') {
               sh 'mvn sonar:sonar -Dsonar.organization=khatabook-application'
          }
        }
    }
        stage('Quality Gate Check'){
          steps{
            script{
              def qualityGate = waitForQualityGate()
              if(qualityGate.status != 'OK' ){
                "Quality Gate failed: ${qualityGate.status}"
              }
            }
          }
       }
        stage('Mvn Build'){
          steps{
             sh "mvn clean install -Dskiptests"
          }
        }
        stage('Docker Image Build'){
         steps{
           sh "docker build . -t  possiadian/khatabook:${DOCKER_TAG}"
         }
       }
       stage('Container image Push'){
        steps{
           withCredentials([string(credentialsId: 'docker-hub', variable: 'dockerP')]) {
               sh "docker login -u possiadian -p ${dockerP}"
               sh "docker push possiadian/khatabook:${DOCKER_TAG}"
           }
        }
       }

    }
}
def getDockerTag(){
     tag = sh script: 'git rev-parse HEAD', returnStdout: true
     return tag
}
